<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Activate" xml:space="preserve">
    <value>Activate</value>
  </data>
  <data name="Active" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddOrder" xml:space="preserve">
    <value>Add Order</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Administrator" xml:space="preserve">
    <value>Administrator</value>
  </data>
  <data name="Alias" xml:space="preserve">
    <value>Alias</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Borislav Vladimirov Boyadzhiev</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="CreateNew" xml:space="preserve">
    <value>Create New</value>
  </data>
  <data name="Deactivate" xml:space="preserve">
    <value>Deactivate</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Destination" xml:space="preserve">
    <value>Destination</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="District" xml:space="preserve">
    <value>District</value>
  </data>
  <data name="Driver" xml:space="preserve">
    <value>Driver</value>
  </data>
  <data name="DriverName" xml:space="preserve">
    <value>Driver Name</value>
  </data>
  <data name="DriversDistrict" xml:space="preserve">
    <value>Driver's District</value>
  </data>
  <data name="DriversName" xml:space="preserve">
    <value>Driver's Name</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>Frist Name</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="GettingStarted" xml:space="preserve">
    <value>Getting Started</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="Latitude" xml:space="preserve">
    <value>Latitude</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginSubtitle" xml:space="preserve">
    <value>Login Subtitle</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Longitude" xml:space="preserve">
    <value>Longitude</value>
  </data>
  <data name="Manage" xml:space="preserve">
    <value>Manage</value>
  </data>
  <data name="ManageDistricts" xml:space="preserve">
    <value>Manage Districts</value>
  </data>
  <data name="ManageDriver" xml:space="preserve">
    <value>Manage Driver</value>
  </data>
  <data name="ManageEmployees" xml:space="preserve">
    <value>Manage Employees</value>
  </data>
  <data name="Manager" xml:space="preserve">
    <value>Manager</value>
  </data>
  <data name="ManageTaxi" xml:space="preserve">
    <value>Manage Taxi</value>
  </data>
  <data name="ManageTaxies" xml:space="preserve">
    <value>Manage Taxies</value>
  </data>
  <data name="ManageTaxiStands" xml:space="preserve">
    <value>Manage Taxi Stands</value>
  </data>
  <data name="MiddleName" xml:space="preserve">
    <value>Middle Name</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Operator" xml:space="preserve">
    <value>Operator</value>
  </data>
  <data name="Overview" xml:space="preserve">
    <value>Overview</value>
  </data>
  <data name="OverviewTtile" xml:space="preserve">
    <value>Overview of the Taxi Management System</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="Plate" xml:space="preserve">
    <value>Plate</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="StartAddress" xml:space="preserve">
    <value>Start Address</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Subtitle" xml:space="preserve">
    <value>A Taxi Service Management System</value>
  </data>
  <data name="Taxi" xml:space="preserve">
    <value>Taxi</value>
  </data>
  <data name="TaxiDistrict" xml:space="preserve">
    <value>Tax iDistrict</value>
  </data>
  <data name="TaxisPlate" xml:space="preserve">
    <value>Taxis Plate</value>
  </data>
  <data name="TaxiStand" xml:space="preserve">
    <value>Taxi Stand</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="UpdateOrder" xml:space="preserve">
    <value>Update Order</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>Full Name</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me?</value>
  </data>
  <data name="AboutDiagram" xml:space="preserve">
    <value>about.svg</value>
  </data>
  <data name="AdminPanel" xml:space="preserve">
    <value>Admin Panel</value>
  </data>
  <data name="Assign" xml:space="preserve">
    <value>Assign</value>
  </data>
  <data name="Available" xml:space="preserve">
    <value>Available</value>
  </data>
  <data name="BackToList" xml:space="preserve">
    <value>Back to List</value>
  </data>
  <data name="CancelOrder" xml:space="preserve">
    <value>Cancel Order</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="ConfirmChanges" xml:space="preserve">
    <value>Confirm changes</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="DeactivateConfirm" xml:space="preserve">
    <value>Are you sure you want to deactivate this?</value>
  </data>
  <data name="Decomission" xml:space="preserve">
    <value>Decomission</value>
  </data>
  <data name="DecomissionConfirm" xml:space="preserve">
    <value>Are you sure you want to decomission this</value>
  </data>
  <data name="DeleteConfirm" xml:space="preserve">
    <value>Are you sure you want to delete this?</value>
  </data>
  <data name="DestinationAddress" xml:space="preserve">
    <value>Destination Address</value>
  </data>
  <data name="Dismiss" xml:space="preserve">
    <value>Dismiss</value>
  </data>
  <data name="DismissConfirm" xml:space="preserve">
    <value>Are you sure you want to dismiss this employee?</value>
  </data>
  <data name="Districts" xml:space="preserve">
    <value>Districts</value>
  </data>
  <data name="Employee" xml:space="preserve">
    <value>Employee</value>
  </data>
  <data name="Employees" xml:space="preserve">
    <value>Employees</value>
  </data>
  <data name="FetchingResults" xml:space="preserve">
    <value>Fetching results</value>
  </data>
  <data name="GettingStartedL31" xml:space="preserve">
    <value>one for the taxi drivers to serve or place an order</value>
  </data>
  <data name="GettingStartedL32" xml:space="preserve">
    <value>one for the clients of the system for ordering a taxi</value>
  </data>
  <data name="GettingStartedLi1" xml:space="preserve">
    <value>ASP.NET MVC Web interface (this site), used for administration, management and call-in operator service</value>
  </data>
  <data name="GettingStartedLi2" xml:space="preserve">
    <value>ASP.NET WebAPI, a RESTful Web API for mobile clients, includes several SignalR Hubs (WebSockets) for real-time communication and events</value>
  </data>
  <data name="GettingStartedLi3" xml:space="preserve">
    <value>Two Android applications:</value>
  </data>
  <data name="GettingStartedP1" xml:space="preserve">
    <value>The management system consists of three major components:</value>
  </data>
  <data name="LengthError" xml:space="preserve">
    <value>The {0} must be at least {2} characters long.</value>
  </data>
  <data name="LockedOut" xml:space="preserve">
    <value>Locked out.</value>
  </data>
  <data name="LockedOutText" xml:space="preserve">
    <value>This account has been locked out, please try again later.</value>
  </data>
  <data name="LoginFormSubtitle" xml:space="preserve">
    <value>Use a local account to log in.</value>
  </data>
  <data name="LoginRegisterNewUser" xml:space="preserve">
    <value>Register as a new user</value>
  </data>
  <data name="LuggageSize" xml:space="preserve">
    <value>Luggage size</value>
  </data>
  <data name="ManageEmployeesRoles" xml:space="preserve">
    <value>Manage Employees' Roles</value>
  </data>
  <data name="ManagerPanel" xml:space="preserve">
    <value>Manager Panel</value>
  </data>
  <data name="NewF" xml:space="preserve">
    <value>new</value>
  </data>
  <data name="NewM" xml:space="preserve">
    <value>new</value>
  </data>
  <data name="NoOrdersToDisplay" xml:space="preserve">
    <value>No orders to display</value>
  </data>
  <data name="OrderAddress" xml:space="preserve">
    <value>Order Address</value>
  </data>
  <data name="RegisterFormSubtitle" xml:space="preserve">
    <value>Create a new account.</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="SeatsCount" xml:space="preserve">
    <value>Seats Count</value>
  </data>
  <data name="SetEmployeeDistrict" xml:space="preserve">
    <value>Set Employees's District</value>
  </data>
  <data name="TaxiGSM" xml:space="preserve">
    <value>Taxi GSM</value>
  </data>
  <data name="TaxiStands" xml:space="preserve">
    <value>Taxi Stands</value>
  </data>
  <data name="UnassignWarning" xml:space="preserve">
    <value>Taxi will be unassigned from the driver! Are you sure?</value>
  </data>
  <data name="UserComment" xml:space="preserve">
    <value>User Comment</value>
  </data>
  <data name="UserDetails" xml:space="preserve">
    <value>User Details</value>
  </data>
  <data name="UserPhoto" xml:space="preserve">
    <value>User's Photo</value>
  </data>
  <data name="Userss" xml:space="preserve">
    <value>User's</value>
  </data>
  <data name="wasNotFound" xml:space="preserve">
    <value>was not found!</value>
  </data>
  <data name="wasNotFoundM" xml:space="preserve">
    <value>was not found!</value>
  </data>
  <data name="Zoom" xml:space="preserve">
    <value>Zoom</value>
  </data>
  <data name="Code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="ConfirmNewPassword" xml:space="preserve">
    <value>Confirm new password</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="CurrentPassword" xml:space="preserve">
    <value>Current Password</value>
  </data>
  <data name="ChangeAccountSettings" xml:space="preserve">
    <value>Change your account settings</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change Your Password</value>
  </data>
  <data name="LinkedInAltText" xml:space="preserve">
    <value>View my LinkedIn profile</value>
  </data>
</root>