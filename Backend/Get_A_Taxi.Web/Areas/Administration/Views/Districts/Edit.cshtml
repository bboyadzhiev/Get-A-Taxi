@model Get_A_Taxi.Web.ViewModels.DistrictVM

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
<div id="map"></div>
<div class="mapHoverPanel">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>DistrictVM</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.DistrictId)

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CenterLattitude, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CenterLattitude, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CenterLattitude, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CenterLongitude, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CenterLongitude, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CenterLongitude, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MapZoom, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MapZoom, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MapZoom, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    var lat = @ViewBag.Lat.ToString("0.000000000").Replace(",", ".");
    var lon = @ViewBag.Lon.ToString("0.000000000").Replace(",", ".");
    var defaultLat = parseFloat(lat)
    var defaultLon = parseFloat(lon);
</script>
<script src="http://maps.google.com/maps/api/js?sensor=true"></script>
@Scripts.Render("~/bundles/gmaps")
<script type="text/javascript">
    function getZoom() {
        $('#MapZoom').val(map.zoom);
    }

    function mapClicked(e) {
        console.log(e);
        map.setCenter(e.latLng.lat(), e.latLng.lng());
        map.removeMarkers();

        map.addMarker({
            lat: e.latLng.lat(),
            lng: e.latLng.lng()
        });
        geocodeComplete(e.latLng, getZoom());
    }

    function geocodeComplete(latlng, mapZoom) {
        map.removeMarkers();
        map.addMarker({
            lat: latlng.lat(),
            lng: latlng.lng()
        });
        $('#CenterLattitude').val(latlng.lat());
        $('#CenterLongitude').val(latlng.lng());
        $('#MapZoom').val(mapZoom);
        $('#Title').val($('#address').val());
    }

    function geoDecodeComplete(address) {
        $('#Title').val(address);
    }
</script>
