@model Get_A_Taxi.Web.Areas.Operator.ViewModels.OrderInputVM
<div id="map"></div>
<div class="mapHoverPanel" id="phoneOrderDiv">
    <div class="form-horizontal">
        @using (Ajax.BeginForm("SearchUser", null, new AjaxOptions
{
    //  UpdateTargetId = "results",
    //   InsertionMode = InsertionMode.Replace,
    HttpMethod = "POST",
    //OnComplete = "phoneSearchResult()"
    OnSuccess = "searchPane.phoneSearchUpdate"
}, new { id = "phoneSearchForm" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-group">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", id = "phoneSearchBox", oninput = "searchPane.phoneChanged()", placeholder = @Html.DisplayNameFor(m => m.PhoneNumber) } })
                </div>
            </div>
        }
    </div>
    
        @Html.Partial("_OrderInputPartialView", Model)
    

    <div id="addOrderPartial">
        @Html.Partial("_AddOrderPartialView")
    </div>
    <div id="updateOrderPartial">
        @Html.Partial("_UpdateOrderPartialView")
    </div>

</div>
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    var lat = @ViewBag.Lat.ToString("0.000000000").Replace(",", ".");
    var lon = @ViewBag.Lng.ToString("0.000000000").Replace(",", ".");
    var mapZoom = @ViewBag.MapZoom;
    var defaultLat = parseFloat(lat);
    var defaultLon = parseFloat(lon);
  
    var district = @ViewBag.DistrictId;
    var operator = "@ViewBag.OperatorId";
</script>
<script src="http://maps.google.com/maps/api/js?sensor=true"></script>
@Scripts.Render("~/bundles/gmaps")
@Scripts.Render("~/bundles/knockout")
@Scripts.Render("~/bundles/signalr")
<script src="~/signalr/hubs" type="text/javascript"></script>

@Scripts.Render("~/bundles/gmaps.taxies")

<div id="currentOrdersPartial" class="rightBottomHover">
    @Html.Partial("_CurrentOrdersPartialView")
</div>
<script>
    $('#orderInputPartial').appendTo('#addOrderInputPlaceholder');
    $('#addOrderPartial').hide();
    $('#updateOrderPartial').hide();
    var searchPane = function () {
        var phoneSearchUpdate = function (data, status, xhr) {
            orderInputPartial.populateInputs(data);
        }

        var phoneChanged = function () {
            if ($('#phoneSearchBox').val().length > 9) {
                $('#orderInputPartial').appendTo('#addOrderInputPlaceholder');
                $('#addOrderPartial').fadeIn();
                $('#phoneSearchForm').submit();
                $('#PhoneNumber').val($('#phoneSearchBox').val());
            }
        }
        return {
            phoneSearchUpdate: phoneSearchUpdate,
            phoneChanged:phoneChanged
        }
    }();

    gATMap.initMap('#map', lat, lon, zoomChanged, mapClicked);
    gATMap.setZoom(mapZoom);
    function mapClicked(e) {
        console.log('Map clicked');
       // console.log(e);
        gATMap.map.setCenter(e.latLng.lat(), e.latLng.lng());
        // map.removeMarkers();
    }


    function zoomChanged(map) {
        //    $('#MapZoom').val(map.zoom);
        console.log('Zoom changed');
        //console.log(map);
    }


</script>

