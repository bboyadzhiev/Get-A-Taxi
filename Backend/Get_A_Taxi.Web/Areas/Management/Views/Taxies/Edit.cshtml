@using Get_A_Taxi.Models
@model Get_A_Taxi.Web.ViewModels.TaxiDetailsVM

@{
    ViewBag.Title = "Edit";
    var districts = (List<SelectListItem>)ViewBag.Districts;
}

<h2>Edit</h2>

@using (Ajax.BeginForm("Edit", null, new AjaxOptions
{
    UpdateTargetId = "taxi-details",
    InsertionMode = InsertionMode.Replace,
    HttpMethod = "POST",
    OnComplete = "hideLoader()"
}, new { id = "editTaxiForm" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TaxiId)

        <div class="form-group">
            @Html.LabelFor(model => model.Plate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Plate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Plate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Seats, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Seats, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Seats, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Luggage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Luggage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Luggage, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Decommissionable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Decommissionable)
                    @Html.ValidationMessageFor(model => model.Decommissionable, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.AssignDistrictId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AssignDistrictId, districts, htmlAttributes: new { @class = "dropdown" })
                @Html.ValidationMessageFor(model => model.AssignDistrictId, "", new { @class = "text-danger" })
            </div>
        </div>

@if (Model.Status == TaxiStatus.OffDuty && Model.Driver.Id == null)
{
     <div class="form-group">
         <div class="col-md-offset-2 col-md-10">
             @Html.ActionLink(
                "Decommission Taxi",
                "Delete",
                new { id = Model.TaxiId },
        //new { onclick = "return confirm('Are you sure you want to decommission this taxi?');", @class = "btn btn-default text-danger" })
     new { @class = "btn btn-default text-danger" })
         </div>
         </div>
}
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                @Html.ActionLink("Cancel", "Index", null, new{ @class = "btn btn-default"})
            </div>
        </div>
    </div>
}

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
}